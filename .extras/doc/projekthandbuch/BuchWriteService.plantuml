@startuml Anwendungskern

interface Promise<T>

package @nestjs/common {
  class "@Injectable" as Injectable
  hide Injectable circle
}

package typeorm {
  class Repository<T>
}

package @nestjs/typeorm {
  class "@InjectRepository" as InjectRepository
  hide InjectRepository circle
}

package mail {
  class MailService
}

package auto {
  package entity {
    class Auto
    class AutoFile
    class Motor
    class Reperatur
  }

  package service #DDDDDD {
    class FahrgestellnummerExistsException
    class VersionInvalidException
    class VersionOutdatedException

    class AutoWriteService << control >> <<@Injectable()>> {
      + async create(auto: Auto): Promise<number>
      + async update(id: number, auto: Auto, version: string): Promise<number>
      + async delete(id: number): Promise<boolean>
      + async addFile(autoId: number, data: Buffer, filename: string, mimetype: string): Promise<AutoFile>
    }

    AutoWriteService o--> "1" AutoReadService: readService
    AutoWriteService o--> "1" Repository<Auto>: @InjectRepository
    AutoWriteService o--> "1" Repository<AutoFile>: @InjectRepository
    AutoWriteService o--> "1" MailService: mailService

    AutoWriteService .up.> Injectable
    AutoWriteService .up.> InjectRepository
    AutoWriteService .up.> Promise

    AutoWriteService ..> Auto
    AutoWriteService ..> AutoFile
    AutoWriteService ..> Motor
    AutoWriteService ..> Reperatur

    AutoWriteService .up.> FahrgestellnummerExistsException
    AutoWriteService .up.> VersionInvalidException
    AutoWriteService .up.> VersionOutdatedException
  }
}

hide empty members

footer (c) JÃ¼rgen Zimmermann

@enduml
