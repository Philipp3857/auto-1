@startuml Anwendungskern

interface Promise<T>

package @nestjs/common {
  class "@Injectable" as Injectable
  hide Injectable circle
}

package typeorm {
  class Repository<T>
}

package @nestjs/typeorm {
  class "@InjectRepository" as InjectRepository
  hide InjectRepository circle
}

package auto {
  package entity {
    class Auto
    class AutoFile
  }

  package service #DDDDDD {
    class QueryBuilder
    class Pageable
    class Slice
    class Suchkriterien

    class AutoReadService << control >> <<@Injectable()>> {
      + async findById(id: number): Promise<Auto>
      + async find(suchkriterien?: Suchkriterien, pageable: Pageable): Promise<Slice<Auto>>
      + async findFileByAutoId(autoId: number): Promise<AutoFile | undefined>
    }

    AutoReadService o--> "1" QueryBuilder: queryBuilder
    AutoReadService o--> "1" Repository<AutoFile>: @InjectRepository fileRepo

    AutoReadService .up.> Injectable
    AutoReadService .up.> InjectRepository

    AutoReadService .up.> Promise
    AutoReadService ..> Auto
    AutoReadService ..> AutoFile
    AutoReadService ..> Pageable
    AutoReadService ..> Suchkriterien
    AutoReadService ..> Slice
  }
}

hide empty members
@enduml
